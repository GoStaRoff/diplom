[{"C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\index.js":"1","C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\App.js":"2","C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\reportWebVitals.js":"3","C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\routes.js":"4","C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\hooks\\http.hook.js":"5","C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\hooks\\message.hook.js":"6","C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\components\\header.js":"7","C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\hooks\\auth.hook.js":"8","C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\context\\auth-context.js":"9","C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\pages\\test-list.js":"10","C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\pages\\profile-settings.js":"11","C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\pages\\user-list.js":"12","C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\pages\\auth-form.js":"13","C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\pages\\main.js":"14","C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\components\\loader.js":"15","C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\components\\link-card.js":"16","C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\components\\links-list.js":"17","C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\components\\pofile-form.js":"18","C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\pages\\create-link.js":"19","C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\pages\\create-test.js":"20"},{"size":500,"mtime":499162500000,"results":"21","hashOfConfig":"22"},{"size":734,"mtime":1611856529706,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":1506,"mtime":1611950626856,"results":"25","hashOfConfig":"22"},{"size":1016,"mtime":1611907220764,"results":"26","hashOfConfig":"22"},{"size":206,"mtime":1611612010322,"results":"27","hashOfConfig":"22"},{"size":1755,"mtime":1611866575182,"results":"28","hashOfConfig":"22"},{"size":861,"mtime":1611854041656,"results":"29","hashOfConfig":"22"},{"size":206,"mtime":1611694619752,"results":"30","hashOfConfig":"22"},{"size":954,"mtime":1611950762673,"results":"31","hashOfConfig":"22"},{"size":1281,"mtime":1611946578497,"results":"32","hashOfConfig":"22"},{"size":1016,"mtime":1611857228793,"results":"33","hashOfConfig":"22"},{"size":3123,"mtime":1611850900934,"results":"34","hashOfConfig":"22"},{"size":2213,"mtime":1611765735012,"results":"35","hashOfConfig":"22"},{"size":475,"mtime":1611854637974,"results":"36","hashOfConfig":"22"},{"size":743,"mtime":1611857165059,"results":"37","hashOfConfig":"22"},{"size":1649,"mtime":1611953418306,"results":"38","hashOfConfig":"22"},{"size":3768,"mtime":1612042999583,"results":"39","hashOfConfig":"22"},{"size":1328,"mtime":1611950486500,"results":"40","hashOfConfig":"22"},{"size":8840,"mtime":1612042774456,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"wa3bmg",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},"C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\index.js",[],["84","85"],"C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\App.js",[],"C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\reportWebVitals.js",[],"C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\routes.js",[],"C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\hooks\\http.hook.js",[],"C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\hooks\\message.hook.js",[],"C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\components\\header.js",[],"C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\hooks\\auth.hook.js",[],"C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\context\\auth-context.js",[],"C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\pages\\test-list.js",[],"C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\pages\\profile-settings.js",[],"C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\pages\\user-list.js",[],"C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\pages\\auth-form.js",[],"C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\pages\\main.js",[],"C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\components\\loader.js",[],"C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\components\\link-card.js",[],"C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\components\\links-list.js",[],"C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\components\\pofile-form.js",[],"C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\pages\\create-link.js",[],"C:\\Users\\gosta\\OneDrive\\Documents\\GitHub\\diplom\\client\\src\\pages\\create-test.js",["86","87","88"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useHttp } from \"../hooks/http.hook\";\r\nimport { AuthContext } from \"../context/auth-context\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./create-test.css\";\r\n\r\nconst CreateTest = () => {\r\n  const history = useHistory();\r\n  const auth = useContext(AuthContext);\r\n  const { request } = useHttp();\r\n  const [link, setLink] = useState(\"\");\r\n  const [isTest, setIsTest] = useState(null);\r\n  const [questions, setQuestions] = useState([\r\n    \"Question example1?\",\r\n    \"Question example2?\",\r\n    \"Question example3?\",\r\n  ]);\r\n  const [answers, setAnswers] = useState([\r\n    [\r\n      { answer: \"Answer example1\", status: true },\r\n      { answer: \"Answer example1\", status: true },\r\n      { answer: \"Answer example1\", status: true },\r\n    ],\r\n    [\r\n      { answer: \"Answer example2\", status: true },\r\n      { answer: \"Answer example2\", status: true },\r\n      { answer: \"Answer example2\", status: true },\r\n    ],\r\n    [\r\n      { answer: \"Answer example3\", status: true },\r\n      { answer: \"Answer example3\", status: true },\r\n      { answer: \"Answer example3\", status: true },\r\n    ],\r\n  ]);\r\n\r\n  const test = {\r\n    name: \"\",\r\n    description: \"\",\r\n    owner: \"\",\r\n    subscribesList: [],\r\n    questionsList: [],\r\n    answersList: [],\r\n  };\r\n\r\n  const typeHandlerTrue = () => {\r\n    setIsTest(true);\r\n  };\r\n\r\n  const typeHandlerFalse = () => {\r\n    setIsTest(false);\r\n  };\r\n\r\n  const addQuestion = () => {\r\n    setQuestions([...questions, \"\"]);\r\n    setAnswers([...answers, []]);\r\n  };\r\n\r\n  const deleteQuestion = (questionIndex) => {\r\n    let newQuestions = [...questions];\r\n    let newAnswers = [...answers];\r\n    newQuestions = newQuestions.filter(\r\n      (question, index) => index !== questionIndex\r\n    );\r\n    newAnswers = newAnswers.filter((answer, index) => index !== questionIndex);\r\n    setQuestions(newQuestions);\r\n    setAnswers(newAnswers);\r\n  };\r\n\r\n  const addAnswer = (questionIndex) => {\r\n    let newAnswers = [...answers];\r\n\r\n    newAnswers[questionIndex] = [\r\n      ...newAnswers[questionIndex],\r\n      { answer: \"\", status: true },\r\n    ];\r\n    setAnswers(newAnswers);\r\n    console.log(newAnswers);\r\n  };\r\n\r\n  const deleteAnswer = (questionIndex, answerIndex) => {\r\n    let newAnswers = [...answers];\r\n    newAnswers[questionIndex] = newAnswers[questionIndex].filter(\r\n      (answer, index) => index !== answerIndex\r\n    );\r\n    setAnswers(newAnswers);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.M.updateTextFields();\r\n  }, []);\r\n\r\n  const pressHandler = async (event) => {\r\n    if (event.key === \"Enter\") {\r\n      try {\r\n        const data = await request(\r\n          \"/api/link/generate\",\r\n          \"POST\",\r\n          { from: link },\r\n          {\r\n            Authorization: `Bearer ${auth.token}`,\r\n          }\r\n        );\r\n        history.push(`/userlist/${data.link._id}`);\r\n      } catch (e) {}\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"row page-card\">\r\n        <div className=\"col s10 offset-s1\" style={{ paddingTop: \"2rem\" }}>\r\n          <div className=\"create-test-info\">\r\n            <h4>Інформація про тест</h4>\r\n            <div className=\"input-field \">\r\n              <input id=\"input_text\" type=\"text\" data-length=\"40\" />\r\n              <label htmlFor=\"input_text\">Назва тесту</label>\r\n            </div>\r\n            <div className=\"input-field \">\r\n              <textarea\r\n                id=\"textarea2\"\r\n                className=\"materialize-textarea\"\r\n                data-length=\"3000\"\r\n              ></textarea>\r\n              <label htmlFor=\"textarea2\">Опис тесту</label>\r\n            </div>\r\n            <form action=\"#\">\r\n              <div className=\"file-field input-field\">\r\n                <div className=\"btn\">\r\n                  <div>Картинка (не обов'язково)</div>\r\n                  <input type=\"file\" accept=\".png, .jpg, .jpeg\" />\r\n                </div>\r\n                <div className=\"file-path-wrapper\">\r\n                  <input className=\"file-path validate\" type=\"text\" />\r\n                </div>\r\n              </div>\r\n            </form>\r\n            <div className=\"type-test\">\r\n              <span>Тип тесту : </span>\r\n              <label>\r\n                <input\r\n                  className=\"with-gap\"\r\n                  name=\"group1\"\r\n                  type=\"radio\"\r\n                  checked={!isTest}\r\n                  onChange={typeHandlerFalse}\r\n                />\r\n                <span>Одна правильна відповідь</span>\r\n              </label>\r\n              <label>\r\n                <input\r\n                  className=\"with-gap\"\r\n                  name=\"group1\"\r\n                  type=\"radio\"\r\n                  checked={isTest}\r\n                  onChange={typeHandlerTrue}\r\n                />\r\n                <span>Правильної відповіді немає</span>\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div className=\"test-questions\">\r\n            <h4>Запитання</h4>\r\n            {questions.map((question, questionIndex) => {\r\n              return (\r\n                <div className=\"question\" key={questionIndex}>\r\n                  <div className=\"question-text\">\r\n                    <h5>\r\n                      {questionIndex + 1}.{\" \"}\r\n                      <div className=\"input-field \">\r\n                        <textarea\r\n                          id=\"textarea2\"\r\n                          className=\"materialize-textarea\"\r\n                          data-length=\"3000\"\r\n                          defaultValue={question}\r\n                        ></textarea>\r\n                        <label htmlFor=\"textarea2\">Запитання</label>\r\n                      </div>\r\n                    </h5>\r\n                  </div>\r\n                  {answers[questionIndex].map((answer, answerIndex) => {\r\n                    return (\r\n                      <div className=\"input-field answer\">\r\n                        <textarea\r\n                          id=\"textarea2\"\r\n                          className=\"materialize-textarea\"\r\n                          style={{width:\"70%\"}}\r\n                          data-length=\"3000\"\r\n                          defaultValue={answer.answer}\r\n                        ></textarea>\r\n                        <label htmlFor=\"textarea2\">Варіант відповіді</label>\r\n                        <button\r\n                          className=\"btn waves-effect waves-light btn red delete-btn\"\r\n                          name=\"createTest\"\r\n                          onClick={() => {\r\n                            deleteAnswer(questionIndex, answerIndex);\r\n                          }}\r\n                        >\r\n                          <i className=\"material-icons\">close</i>\r\n                        </button>\r\n                        \r\n                      </div>\r\n                    );\r\n                  })}\r\n                  <button\r\n                    className=\"btn waves-effect waves-light -btn yellow darken-3\"\r\n                    name=\"createTest\"\r\n                    onClick={() => {\r\n                      addAnswer(questionIndex);\r\n                    }}\r\n                  >\r\n                    <i className=\"large material-icons right\">add_circle</i>\r\n                    Додати відповідь\r\n                  </button>\r\n                  <button\r\n                        className=\"btn waves-effect waves-light -btn white\"\r\n                        name=\"createTest\"\r\n                        style={{ color: \"black\" , marginLeft: '20px'}}\r\n                        onClick={() => {\r\n                          deleteQuestion(questionIndex);\r\n                        }}\r\n                      >\r\n                        <i className=\"large material-icons right\">\r\n                          delete_forever\r\n                        </i>\r\n                        Видалити запитання\r\n                      </button>\r\n                </div>\r\n              );\r\n            })}\r\n            <div className=\"add-question\">\r\n              <button\r\n                className=\"btn waves-effect waves-light create-test-btn green add-question\"\r\n                name=\"createTest\"\r\n                onClick={addQuestion}\r\n              >\r\n                <i className=\"large material-icons right\">add_circle</i>Додати\r\n                запитання\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"create-completed-test\">\r\n        <button className=\"btn waves-effect waves-light\" name=\"createTest\">\r\n          <i class=\"large material-icons right\">add_circle</i>Створити тест\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateTest;\r\n",{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":11,"column":16,"nodeType":"95","messageId":"96","endLine":11,"endColumn":23},{"ruleId":"93","severity":1,"message":"97","line":36,"column":9,"nodeType":"95","messageId":"96","endLine":36,"endColumn":13},{"ruleId":"93","severity":1,"message":"98","line":92,"column":9,"nodeType":"95","messageId":"96","endLine":92,"endColumn":21},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'setLink' is assigned a value but never used.","Identifier","unusedVar","'test' is assigned a value but never used.","'pressHandler' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]